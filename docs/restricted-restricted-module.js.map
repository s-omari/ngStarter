{"version":3,"sources":["webpack:///./node_modules/rxjs-compat/_esm5/add/operator/do.js","webpack:///./node_modules/rxjs-compat/_esm5/operator/do.js","webpack:///./src/app/@core/authentication/auth-interceptor.ts","webpack:///./src/app/modules/application/restricted/change-password/change-password.component.html","webpack:///./src/app/modules/application/restricted/change-password/change-password.component.scss","webpack:///./src/app/modules/application/restricted/change-password/change-password.component.ts","webpack:///./src/app/modules/application/restricted/change-password/change-password.service.ts","webpack:///./src/app/modules/application/restricted/change-password/form-errors.ts","webpack:///./src/app/modules/application/restricted/restricted-routing.module.ts","webpack:///./src/app/modules/application/restricted/restricted.component.html","webpack:///./src/app/modules/application/restricted/restricted.component.scss","webpack:///./src/app/modules/application/restricted/restricted.component.ts","webpack:///./src/app/modules/application/restricted/restricted.module.ts","webpack:///./src/app/modules/application/restricted/settings/settings.component.html","webpack:///./src/app/modules/application/restricted/settings/settings.component.scss","webpack:///./src/app/modules/application/restricted/settings/settings.component.ts","webpack:///./src/app/modules/application/restricted/settings/settings.service.ts","webpack:///./src/app/modules/application/restricted/shared-restricted/components/header/header.component.html","webpack:///./src/app/modules/application/restricted/shared-restricted/components/header/header.component.scss","webpack:///./src/app/modules/application/restricted/shared-restricted/components/header/header.component.ts","webpack:///./src/app/modules/application/restricted/side-menu/side-menu.component.html","webpack:///./src/app/modules/application/restricted/side-menu/side-menu.component.sass","webpack:///./src/app/modules/application/restricted/side-menu/side-menu.component.ts"],"names":[],"mappings":"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","file":"restricted-restricted-module.js","sourcesContent":["import { Observable } from 'rxjs';\nimport { _do } from '../../operator/do';\nObservable.prototype.do = _do;\nObservable.prototype._do = _do;\n//# sourceMappingURL=do.js.map","import { tap as higherOrder } from 'rxjs/operators';\nexport function _do(nextOrObserver, error, complete) {\n    return higherOrder(nextOrObserver, error, complete)(this);\n}\n//# sourceMappingURL=do.js.map","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport 'rxjs/add/operator/do';\nimport { HttpInterceptor, HttpHandler, HttpRequest } from '@angular/common/http';\n\nimport { UserService } from '../services/user.service';\nimport { environment } from '../../../environments/environment';\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n    token: string;\n    baseUrl: string;\n\n    constructor(public userService: UserService) {\n        this.baseUrl = environment.baseUrl;\n        console.log('auth interceptor');\n        console.log('stored token: ' + this.userService.getToken());\n\n    }\n    /**\n     * Intercept  http calls and add  Auth Token as request header\n     *\n     * If request is unsuccessful with  401 - Unauthorized status ,\n     * log  user out with UserService\n     */\n\n\n    intercept(\n        req: HttpRequest<any>,\n        next: HttpHandler\n    ): Observable<any> {\n        const authReq = req.clone({\n          headers: req.headers\n          // add stored auth token as auth header\n            .set('Authorization', `Basic ${this.userService.getToken()}`)\n        });\n\n        return next.handle(authReq)\n          .do(\n            (success) => {},\n            (error) => {\n            if (error.status === 401) {\n                this.userService.logOut();\n            }\n          });\n    }\n\n}\n","module.exports = \"<section class=\\\"container-fluid w-100 mt-4 p-0\\\">\\n\\n  <div class=\\\"row h-100 justify-content-center align-items-center\\\">\\n    <div class=\\\"col-10 col-md-6 col-lg-4\\\">\\n      <mat-card class=\\\"text-center p-5\\\">\\n        <mat-icon  [hidden]=\\\"isSubmitting\\\"> lock </mat-icon>\\n        <mat-card-content>\\n\\n          <form (ngSubmit)=\\\"changePassword($event)\\\" [hidden]=\\\"isSubmitting\\\" [formGroup]=\\\"form\\\">\\n            <div class=\\\"container\\\">\\n              <div class=\\\"row justify-content-center align-items-center\\\">\\n                <div class=\\\"col-12\\\">\\n                  <mat-form-field appearance=\\\"outline\\\" [floatLabel]=\\\"'always'\\\">\\n          <mat-label>Old Password</mat-label>\\n\\n                    <input matInput placeholder=\\\"Old Password\\\" type=\\\"password\\\" formControlName=\\\"old\\\" required />\\n                  </mat-form-field>\\n                  <br>\\n                  <span class=\\\"text-danger\\\" *ngIf=\\\"errors.old\\\">\\n                    {{ errors.old }}\\n                  </span>\\n                </div>\\n              </div>\\n              <div class=\\\"row justify-content-center align-items-center\\\">\\n                <div class=\\\"col-12\\\">\\n                  <mat-form-field appearance=\\\"outline\\\" [floatLabel]=\\\"'always'\\\">\\n          <mat-label>New Password</mat-label>\\n\\n                    <input matInput placeholder=\\\"New Password\\\" type=\\\"password\\\" formControlName=\\\"password\\\" required />\\n                  </mat-form-field>\\n                  <br>\\n                  <span class=\\\"text-danger\\\" *ngIf=\\\"errors.password\\\">\\n                    {{ errors.password }}\\n                  </span>\\n                </div>\\n              </div>\\n              <div class=\\\"row justify-content-center align-items-center\\\">\\n                <div class=\\\"col-12\\\">\\n                  <mat-form-field appearance=\\\"outline\\\" [floatLabel]=\\\"'always'\\\">\\n          <mat-label>Confirm New Password</mat-label>\\n\\n                    <input matInput placeholder=\\\"Confirm New Password\\\" type=\\\"password\\\" formControlName=\\\"confirmPassword\\\"\\n                      required />\\n                  </mat-form-field>\\n                  <br>\\n                  <span class=\\\"text-danger\\\" *ngIf=\\\"errors.confirmPassword\\\">\\n                    {{ errors.confirmPassword }}\\n                  </span>\\n                </div>\\n              </div>\\n\\n              <div class=\\\"row justify-content-center align-items-center mt-2\\\">\\n                <div class=\\\"col-xs text-xs-center\\\">\\n                  <button type=\\\"submit\\\" [disabled]=\\\"form.invalid\\\" mat-raised-button color=\\\"accent\\\">\\n                    Change Password\\n                  </button>\\n                </div>\\n              </div>\\n            </div>\\n          </form>\\n          <div class=\\\"row text-xs-center justify-content-center align-items-center my-2 mx-2\\\" *ngIf=\\\"isSubmitting\\\">\\n            <mat-progress-spinner mode=\\\"indeterminate\\\"></mat-progress-spinner>\\n          </div>\\n        </mat-card-content>\\n      </mat-card>\\n    </div>\\n  </div>\\n</section>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvYXBwbGljYXRpb24vcmVzdHJpY3RlZC9jaGFuZ2UtcGFzc3dvcmQvY2hhbmdlLXBhc3N3b3JkLmNvbXBvbmVudC5zY3NzIn0= */\"","import { MatDialog, MatSnackBar } from '@angular/material';\nimport { Component, OnInit } from '@angular/core';\nimport { FormGroup, Validators, FormBuilder } from '@angular/forms';\n\nimport { errorMessages, errors } from './form-errors';\nimport { PasswordValidation } from '../../../../@core/form-validation/password.validator';\nimport { ChangePasswordService } from './change-password.service';\nimport {PublicService} from '../../public/public.service';\n\nimport { Location } from '@angular/common';\n\n\n@Component({\n  selector: 'app-change-password',\n  templateUrl: 'change-password.component.html',\n  styleUrls: ['change-password.component.scss']\n})\nexport class ChangePasswordComponent implements OnInit {\n  isSubmitting = false;\n  form: FormGroup;\n\n  errors = errors;\n  errorMessages = errorMessages;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private changePasswordService: ChangePasswordService,\n    public publicService: PublicService,\n\n    private matSnackBar: MatSnackBar,\n    private location: Location\n\n  ) { }\n\n  ngOnInit() {\n    this.buildForm();\n    this.form.valueChanges.subscribe(data => this.validateForm());\n  }\n\n  buildForm() {\n    this.form = this.formBuilder.group({\n      old: [null, Validators.compose([Validators.required, Validators.minLength(6)])],\n      password: [null, Validators.compose([Validators.required, Validators.minLength(6)])],\n      confirmPassword: [null, Validators.compose([Validators.required])]\n    }, {\n        validator: Validators.compose([\n          PasswordValidation.confirmPassword,\n          PasswordValidation.passwordPattern\n        ])\n      });\n  }\n\n  validateForm() {\n    for (const field in this.errors) {\n      this.errors[field] = '';\n      const input = this.form.get(field);\n      if (input.invalid && input.dirty) {\n        for (const error in input.errors) {\n          this.errors[field] = this.errorMessages[field][error];\n        }\n      }\n    }\n\n  }\n\n  changePassword(event: any) {\n    const data = {\n      old_password: this.form.get('old').value,\n      password: this.form.get('password').value,\n      password_confirmation: this.form.get('confirmPassword').value\n    };\n\n    this.isSubmitting = true;\n    this.changePasswordService.changePassword(data)\n      .subscribe((response: any) => {\n        this.isSubmitting = false;\n        if (response.data) {\n          this.matSnackBar.open('Password has Changed Successfully', null, {\n            duration: 3000\n          });\n          this.goBack();\n        }\n      }, error => {\n        this.isSubmitting = false;\n        this.matSnackBar.open('Something went wrong, please ensure your old password is correct', null, {\n          duration: 3000\n        });\n      });\n  }\n\n\n  goBack() {\n    this.location.back();\n  }\n}\n","import { UserService } from '../../../../@core/services/user.service';\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ChangePasswordService {\n\n  constructor(\n    private http: HttpClient,\n    private userService: UserService,\n\n  ) { }\n\n  /**\n   * Change password.\n   * @param data old and new password\n   */\n  changePassword(data: any) {\n    return this.http.post(\n      this.userService.baseUrl + '/user/update-password',\n      data\n    );\n  }\n\n\n\n}\n","export const errors = {\n    old: '',\n    password: '',\n    confirmPassword: ''\n};\n\nexport const errorMessages = {\n    old: {\n        required: 'Old Password Field is Required',\n        minlength: 'Old Password field mst be 6 or more characters'\n    },\n    password: {\n        required: 'New Password Field is Required',\n        minlength: 'New Password field mst be 6 or more characters',\n        passwordPattern: 'Password must contain one uppercase character, one lowercase character and one number'\n    },\n    confirmPassword: {\n        required: 'New Password Field is Required',\n        confirmPassword: 'Please ensure passwords match',\n    }\n};\n","import { ChangePasswordComponent } from './change-password/change-password.component';\nimport { SettingsComponent } from './settings/settings.component';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { RestrictedComponent } from './restricted.component';\n\n\n\n\nconst routes: Routes = [{\n  path: '',\n  component: RestrictedComponent,\n  children: [\n\n\n    // { path: 'admin', loadChildren: './admin/admin.module#AdminModule' },\n    { path: 'settings', component: SettingsComponent },\n    { path: 'change-password', component: ChangePasswordComponent },\n\n    { path: '', redirectTo: 'settings', pathMatch: 'prefix' },\n  ]\n}\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\n\nexport class RestrictedRoutingModule { }\n","module.exports = \"<app-header #header (toggleNavigation)=\\\"sidenav.toggle()\\\">\\n</app-header>\\n\\n<router-outlet></router-outlet>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvYXBwbGljYXRpb24vcmVzdHJpY3RlZC9yZXN0cmljdGVkLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit} from '@angular/core';\n\n@Component({\n  selector: 'app-restricted',\n  templateUrl: './restricted.component.html',\n  styleUrls: ['./restricted.component.scss']\n})\nexport class RestrictedComponent implements OnInit {\n\n  constructor() {\n  }\n\n  ngOnInit() {\n\n  }\n\n}\n","import { ChangePasswordComponent } from './change-password/change-password.component';\nimport { SettingsComponent } from './settings/settings.component';\n\n\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { RestrictedComponent } from './restricted.component';\nimport { SideMenuComponent } from './side-menu/side-menu.component';\n\nimport { SharedModule } from '../../../shared/shared.module';\nimport {SharedApplicationModule} from '../shared-application/shared-application.module';\nimport { ThemeModule} from '../../../@theme/theme.module';\n\nimport { HeaderComponent } from './shared-restricted/components/header/header.component';\n// import { FooterComponent } from './shared-restricted/components/footer/footer.component';\n\nimport { RestrictedRoutingModule } from './restricted-routing.module';\nimport { AuthInterceptor } from '../../../@core/authentication/auth-interceptor';\nimport { HTTP_INTERCEPTORS , HttpClientModule , HttpClient } from '@angular/common/http';\n\n\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    SharedModule,\n    SharedApplicationModule,\n    ThemeModule,\n    HttpClientModule,\n    // HttpClient,\n    RestrictedRoutingModule,\n  ],\n  declarations: [\n\n    RestrictedComponent,\n    HeaderComponent,\n    // FooterComponent,\n    SideMenuComponent,\n    SettingsComponent,\n    ChangePasswordComponent,\n\n\n  ],\n  providers: [\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: AuthInterceptor,\n      multi: true\n    }\n  ],\n  entryComponents: [ChangePasswordComponent],\n\n  exports: [\n    ThemeModule,\n    SharedModule ,\n    SharedApplicationModule\n  ]\n\n})\nexport class RestrictedModule { }\n","module.exports = \"<section class=\\\"container-fluid w-100 mt-4 p-0\\\">\\n  <div class=\\\"row align-items-center justify-content-center\\\">\\n    <div class=\\\"col-12 col-sm-6 col-md-4 col-lg-3 col-xl-2\\\">\\n\\n    </div>\\n  </div>\\n  <div class=\\\"row h-100 justify-content-center align-items-center\\\">\\n    <div class=\\\"col-10 col-md-6 col-lg-4\\\">\\n      <mat-card class=\\\"text-center p-5\\\" color=\\\"primary\\\">\\n        <i style=\\\"font-size:55px;\\\" class=\\\"px-5 mb-2 material-icons\\\" [hidden]=\\\"isSubmitting || requestStatus\\\"> account_circle </i>\\n        <mat-card-content>\\n          <form #updateForm=\\\"ngForm\\\" (ngSubmit)=\\\"updateUser($event)\\\" [hidden]=\\\"isSubmitting\\\">\\n            <div class=\\\"container\\\">\\n              <div class=\\\"row justify-content-center align-items-center\\\">\\n                <div class=\\\"col-12\\\">\\n                  <mat-form-field>\\n                    <input matInput [(ngModel)]=\\\"user.email\\\" (ngModelChange)=\\\"invalidCredentials=false\\\" placeholder=\\\"Email\\\" type=\\\"text\\\"\\n                      name=\\\"email\\\" #email=\\\"ngModel\\\" [pattern]=\\\"validationSer.patterns.email\\\" required>\\n                  </mat-form-field>\\n                  <form-validation [name]=\\\"email\\\" [errorMessages]=\\\"{'pattern':'Please enter a valid email address'}\\\">\\n                  </form-validation>\\n                </div>\\n              </div>\\n              <div class=\\\"row justify-content-center align-items-center\\\">\\n                <div class=\\\"col-12\\\">\\n                  <mat-form-field>\\n                    <input matInput [(ngModel)]=\\\"user.first_name\\\" (ngModelChange)=\\\"invalidCredentials=false\\\" placeholder=\\\"First Name\\\" type=\\\"text\\\"\\n                      name=\\\"first_name\\\" #first_name=\\\"ngModel\\\" required>\\n                  </mat-form-field>\\n                </div>\\n              </div>\\n              <div class=\\\"row justify-content-center align-items-center\\\">\\n                <div class=\\\"col-12\\\">\\n                  <mat-form-field>\\n                    <input matInput [(ngModel)]=\\\"user.last_name\\\" (ngModelChange)=\\\"invalidCredentials=false\\\" placeholder=\\\"Last Name\\\" type=\\\"text\\\"\\n                      name=\\\"last_name\\\" #last_name  =\\\"ngModel\\\" required>\\n                  </mat-form-field>\\n                </div>\\n              </div>\\n              <div class=\\\"row justify-content-center align-items-center\\\">\\n                <div class=\\\"col-12\\\">\\n                  <mat-form-field>\\n                    <input matInput [(ngModel)]=\\\"user.phone_number\\\" (ngModelChange)=\\\"invalidCredentials=false\\\" placeholder=\\\"Phone Number\\\" type=\\\"text\\\"\\n                      name=\\\"phone_number\\\" #phone_number=\\\"ngModel\\\" [pattern]=\\\"validationSer.patterns.phone_number\\\" required>\\n                  </mat-form-field>\\n                  <form-validation [name]=\\\"phone_number\\\" [errorMessages]=\\\"{'pattern':'Please enter a valid phone number'}\\\">\\n                  </form-validation>\\n                </div>\\n              </div>\\n              <div class=\\\"row justify-content-center align-items-center mt-2\\\">\\n                <div class=\\\"col-xs text-xs-center\\\">\\n                  <button type=\\\"submit\\\" [disabled]=\\\"updateForm.form.invalid\\\" mat-raised-button color=\\\"accent\\\">\\n                    Update Profile\\n                  </button>\\n                </div>\\n              </div>\\n            </div>\\n          </form>\\n          <div class=\\\"row text-xs-center justify-content-center align-items-center my-2 mx-2\\\" *ngIf=\\\"isSubmitting\\\">\\n            <mat-progress-spinner mode=\\\"indeterminate\\\"></mat-progress-spinner>\\n          </div>\\n        </mat-card-content>\\n      </mat-card>\\n    </div>\\n  </div>\\n</section>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvYXBwbGljYXRpb24vcmVzdHJpY3RlZC9zZXR0aW5ncy9zZXR0aW5ncy5jb21wb25lbnQuc2NzcyJ9 */\"","import { ValidationService } from '../../../../@core/services/validation.service';\nimport { Component, OnInit } from '@angular/core';\nimport { Iuser, User } from '../../../../@core/models/user.model';\nimport { SettingsService } from './settings.service';\n\n@Component({\n  selector: 'app-settings',\n  templateUrl: './settings.component.html',\n  styleUrls: ['./settings.component.scss']\n})\nexport class SettingsComponent implements OnInit {\n  user: Iuser;\n  invalidCredentials = false;\n  requestStatus: string = null;\n  isSubmitting = false;\n\n  constructor(public validationSer: ValidationService, public settingsSer: SettingsService) {\n    this.user = new User();\n  }\n\n  ngOnInit() {\n  }\n\n  public updateUser(e) {\n    this.isSubmitting = true;\n    this.settingsSer.updateUser(this.user)\n      .subscribe(response => {\n        this.isSubmitting = false;\n        this.requestStatus = 'success';\n        console.log(response);\n      }, error => {\n        this.requestStatus = 'invalid email';\n        const errors = error.json().errors;\n        const errorsArray = [];\n        for (const errorText in errors) {\n          if (errors.hasOwnProperty(errorText)) {\n            errorsArray.push(errors[errorText]);\n          }\n        }\n        errorsArray.map(individualError => {\n          console.log(individualError);\n        });\n      }, () => {\n        this.isSubmitting = false;\n      });\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport { UserService } from '../../../../@core/services/user.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SettingsService {\n\n  constructor(public http: HttpClient, public userService: UserService) { }\n\n  public updateUser(userDetails: any): Observable<any> {\n    return this.http.post(\n      this.userService.baseUrl + `user`,\n      userDetails\n    );\n  }\n}\n","module.exports = \"<mat-toolbar>\\n\\n<button mat-button >\\n  <div routerLink=''  routerLink='' class=\\\"logo\\\">ngStarter</div>\\n</button>\\n\\n<span class=\\\"flex-spacer\\\"></span>\\n\\n<language-switcher></language-switcher>\\n<theme-switcher [selectedTheme]=\\\"appService.appTheme\\\" (onSelectTheme)=\\\"appService.setTheme($event)\\\"></theme-switcher>\\n\\n  <a [mat-menu-trigger-for]=\\\"userMenu\\\">\\n    <mat-icon>account_box</mat-icon>\\n  </a>\\n\\n</mat-toolbar>\\n\\n<mat-menu #userMenu=\\\"matMenu\\\">\\n  <mat-card class=\\\"px-1 py-0 pt-1\\\" style=\\\"box-shadow:none;\\\">\\n    <mat-card-header>\\n      <mat-card-title class=\\\"mb-3\\\"> {{userSer.user?.name}}</mat-card-title>\\n      <mat-card-subtitle> {{userSer.user?.email}} </mat-card-subtitle>\\n    </mat-card-header>\\n    <mat-card-content class=\\\"mt-1\\\">\\n      <button mat-menu-item [routerLink]=\\\"['/application/restricted/settings']\\\">\\n        <mat-icon> account_circle </mat-icon>\\n        My profile\\n      </button>\\n      <button [routerLink]=\\\"['/application/restricted/change-password']\\\" mat-menu-item>\\n        <mat-icon> lock </mat-icon>\\n        Change Password\\n      </button>\\n      <button mat-menu-item (click)=\\\"userSer.logOut()\\\">\\n        <mat-icon> exit_to_app </mat-icon>\\n        Sign Out\\n      </button>\\n    </mat-card-content>\\n  </mat-card>\\n</mat-menu>\\n\"","module.exports = \"mat-toolbar {\\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.26);\\n  position: relative;\\n  width: 100%;\\n  z-index: 800; }\\n  mat-toolbar .fill-remaining-space {\\n    flex: 1 1 auto; }\\n  mat-toolbar .color-box {\\n    display: inline-flex;\\n    vertical-align: middle;\\n    width: 30px;\\n    height: 30px;\\n    float: left; }\\n  mat-toolbar .logo {\\n    padding: 0 60px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9hcHBsaWNhdGlvbi9yZXN0cmljdGVkL3NoYXJlZC1yZXN0cmljdGVkL2NvbXBvbmVudHMvaGVhZGVyL0M6XFxVc2Vyc1xcc29tYXJcXE9uZURyaXZlXFxEZXNrdG9wXFx0ZW1wIGNsZWFudXBcXEFwcHhcXEFuZ3VsYXJTdGFydGVyXFxuZ1N0YXJ0ZXIvc3JjXFxhcHBcXG1vZHVsZXNcXGFwcGxpY2F0aW9uXFxyZXN0cmljdGVkXFxzaGFyZWQtcmVzdHJpY3RlZFxcY29tcG9uZW50c1xcaGVhZGVyXFxoZWFkZXIuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUE7RUFFRSx5Q0FBeUM7RUFDekMsa0JBQWtCO0VBQ2xCLFdBQVc7RUFDWCxZQUFZLEVBQUE7RUFMZDtJQVFJLGNBQWMsRUFBQTtFQVJsQjtJQWFJLG9CQUFvQjtJQUNwQixzQkFBc0I7SUFDdEIsV0FBVztJQUNYLFlBQVk7SUFDWixXQUFXLEVBQUE7RUFqQmY7SUFxQkUsZUFBZSxFQUFBIiwiZmlsZSI6InNyYy9hcHAvbW9kdWxlcy9hcHBsaWNhdGlvbi9yZXN0cmljdGVkL3NoYXJlZC1yZXN0cmljdGVkL2NvbXBvbmVudHMvaGVhZGVyL2hlYWRlci5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi8vIEBpbXBvcnQgJy4uLy4uLy4uLy4uL3ZhcmlhYmxlcydcbi8vICRpY29uLWZvbnQtcGF0aDogJy4uL25vZGVfbW9kdWxlcy9ib290c3RyYXAtc2Fzcy9hc3NldHMvZm9udHMvYm9vdHN0cmFwLydcbm1hdC10b29sYmFyIHtcbiAgLy8gaGVpZ2h0OiAkYXBwSGVhZGVySGVpZ2h0XG4gIGJveC1zaGFkb3c6IDAgNHB4IDhweCByZ2JhKDAsIDAsIDAsIDAuMjYpO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHdpZHRoOiAxMDAlO1xuICB6LWluZGV4OiA4MDA7XG5cbiAgLmZpbGwtcmVtYWluaW5nLXNwYWNlIHtcbiAgICBmbGV4OiAxIDEgYXV0bztcbiAgfVxuXG5cbiAgLmNvbG9yLWJveCB7XG4gICAgZGlzcGxheTogaW5saW5lLWZsZXg7XG4gICAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcbiAgICB3aWR0aDogMzBweDtcbiAgICBoZWlnaHQ6IDMwcHg7XG4gICAgZmxvYXQ6IGxlZnQ7XG4gIH1cblxuLmxvZ28ge1xuICBwYWRkaW5nOiAwIDYwcHg7XG59XG59XG4iXX0= */\"","import { User } from '../../../../../../@core/models/user.model';\nimport { Component, EventEmitter, Output } from '@angular/core';\n\nimport { UserService } from '../../../../../../@core/services/user.service';\nimport { AppService } from '../../../../../../@core/services/app.service';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent {\n  // tslint:disable-next-line:no-output-rename\n  @Output('toggleNavigation') toggleNavigation = new EventEmitter();\n\n  constructor(\n    public userSer: UserService,\n    public appService: AppService,\n\n  ) {\n    // console.log(userSer.user.email);\n  }\n\n}\n","module.exports = \"<div class=\\\"container-fluid\\\">\\n  <!-- main navigation menu-->\\n  <div class=\\\"row align-items-center justify-content-start\\\">\\n    <div class=\\\"col px-0\\\">\\n      <mat-nav-list>\\n        <mat-list-item *ngFor=\\\"let link of links\\\" class=\\\"my-2 no-padding\\\" (click)=\\\"linkClicked.emit(link.route)\\\"\\n          [routerLink]=\\\"link.route\\\" routerLinkActive=\\\"router-link-active\\\">\\n          <button class=\\\"w-100 h-100 px-0 text-left\\\" mat-button>\\n            <mat-icon class=\\\"align-middle mx-2\\\"> {{link.iconName}} </mat-icon>\\n            <span style=\\\"font-size:14px;\\\" translate>{{link.label}}</span>\\n          </button>\\n        </mat-list-item>\\n      </mat-nav-list>\\n    </div>\\n  </div>\\n</div>\\n\"","module.exports = \"md-nav-list mat-list-item.no-padding .mat-list-item-content {\\n  padding: 0px !important; }\\n\\nmd-nav-list mat-list-item button {\\n  font-size: 1em; }\\n\\n.router-link-active {\\n  display: none; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9hcHBsaWNhdGlvbi9yZXN0cmljdGVkL3NpZGUtbWVudS9DOlxcVXNlcnNcXHNvbWFyXFxPbmVEcml2ZVxcRGVza3RvcFxcdGVtcCBjbGVhbnVwXFxBcHB4XFxBbmd1bGFyU3RhcnRlclxcbmdTdGFydGVyL3NyY1xcYXBwXFxtb2R1bGVzXFxhcHBsaWNhdGlvblxccmVzdHJpY3RlZFxcc2lkZS1tZW51XFxzaWRlLW1lbnUuY29tcG9uZW50LnNhc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFJUSx1QkFBdUIsRUFBQTs7QUFKL0I7RUFPTSxjQUFjLEVBQUE7O0FBRXBCO0VBQ0UsYUFBYSxFQUFBIiwiZmlsZSI6InNyYy9hcHAvbW9kdWxlcy9hcHBsaWNhdGlvbi9yZXN0cmljdGVkL3NpZGUtbWVudS9zaWRlLW1lbnUuY29tcG9uZW50LnNhc3MiLCJzb3VyY2VzQ29udGVudCI6WyJtZC1uYXYtbGlzdCB7XG4gIG1hdC1saXN0LWl0ZW0ge1xuICAgICYubm8tcGFkZGluZyB7XG4gICAgICAubWF0LWxpc3QtaXRlbS1jb250ZW50IHtcbiAgICAgICAgcGFkZGluZzogMHB4ICFpbXBvcnRhbnQ7IH0gfVxuXG4gICAgYnV0dG9uIHtcbiAgICAgIGZvbnQtc2l6ZTogMWVtOyB9IH0gfVxuXG4ucm91dGVyLWxpbmstYWN0aXZlIHtcbiAgZGlzcGxheTogbm9uZTsgfVxuIl19 */\"","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { SideMenuLink } from '../../shared-application/models/side-menu-link.model';\n\n\n@Component({\n  selector: 'app-side-menu',\n  templateUrl: './side-menu.component.html',\n  styleUrls: ['./side-menu.component.sass']\n})\nexport class SideMenuComponent implements OnInit {\n  @Output() 'linkClicked' = new EventEmitter();\n\n  links: Array<SideMenuLink> = [\n    { label: 'Resources', route: '/demo/resources', iconName: 'list' },\n    { label: 'Appointments', route: '/demo/appointments', iconName: 'calendar_today' },\n    { label: 'Chat', route: '/demo/chat', iconName: 'message' },\n    { label: 'Components', route: '/demo/components', iconName: 'important_devices' }\n  ];\n\n  constructor() { }\n\n  ngOnInit() { }\n}\n"],"sourceRoot":""}